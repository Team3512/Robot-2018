// Copyright (c) 2016-2018 FRC Team 3512. All Rights Reserved.

#pragma once

// Includes definition for Talons and etc that connect to the RoboRIO

/* Order of constants:
 * > Motor IDs
 * > Solenoid Ports
 * > Limit switches
 * > Distance per pulse
 * > PID
 * > Other (i.e. miscellaneous constants)
 */

/*
 * Joystick and buttons
 */

// Joystick ports
constexpr int kDriveStick1Port = 0;
constexpr int kDriveStick2Port = 1;
constexpr int kAppendageStickPort = 2;

// Joystick axis deadband range
constexpr double kJoystickDeadband = 0.02;

/*
 * DriveTrain
 */

// DriveTrain GearBox ID
constexpr int kLeftDriveMasterID = 1;
constexpr int kLeftDriveSlaveID = 2;
constexpr int kRightDriveMasterID = 3;
constexpr int kRightDriveSlaveID = 4;

// Distance per Pulse
// constexpr double kLeftDpP = 139.0 / 6934.33; Proto
// constexpr double kRightDpP = 139.0 / 10748.33; Proto
constexpr double kLeftDpP = 99.0 / ((7319.0 + 7306.0 + 7305.0) / 3.0);
constexpr double kRightDpP = 99.0 / ((7440.0 + 7338.0 + 7400.0) / 3.0);

// DriveTrain position PID
constexpr double kPosP = 0.07;  // .06
constexpr double kPosI = 0.00;
constexpr double kPosD = 0.024;  // .024

// Drive trapezoid profile constants
constexpr double kRobotMaxV = 150.0 * 0.85;        // in/sec 227.2
constexpr double kRobotTimeToMaxV = 3.0;           // sec
constexpr double kRobotMaxRotateRate = 259.0;      // deg/sec 180
constexpr double kRobotTimeToMaxRotateRate = 1.0;  // sec

// Drive motor feedforwards
constexpr double kVDrive = 1.0 / 227.2;  // 1 / max velocity
constexpr double kADrive = 0.005;  // (V - (kV * v + Vmin)) / a, 0.1, .00075

// DriveTrain angle PID
constexpr double kAngleP = 0.14;  // .14
constexpr double kAngleI = 0.00;
constexpr double kAngleD = 0.09;  // .09

// Drive angle feedforwards
constexpr double kVAngle = 1.0 / 227.2;  // /80
constexpr double kAAngle = 0.005;        // .003

// Physical Robot Constants
constexpr double kWheelbaseWidth = 24.0;
constexpr double kDegreesToRadians = 3.1415926535897932 / 180.0;
constexpr double kRobotLength = 37.0;  // Approximate
constexpr double kRobotWidth = 33.0;   // Approximate
constexpr double kMaxControlVoltage = 12;

// CheesyDrive constants
constexpr double kLowGearSensitive = 0.75;
constexpr double kTurnNonLinearity = 1.0;
constexpr double kInertiaDampen = 2.5;
constexpr double kInertiaHighTurn = 3.0;
constexpr double kInertiaLowTurn = 3.0;

/*
 * Intake
 */

// Talon IDs
constexpr int kIntakeLeftID = 5;
constexpr int kIntakeRightID = 6;

// Solenoid Ports
constexpr int kIntakeClawPort = 1;
constexpr int kIntakeArmPort = 2;

/*
 * Elevator
 */

// Elevator GearBox ID
constexpr int kElevatorMasterID = 7;
constexpr int kElevatorSlaveID = 8;

// Hall Effect Sensor Port
constexpr int kElevatorBottomHallPort = 1;

// Distance per Pulse
// constexpr double kElevatorDpP = 0.00142230843;  // Protobot
constexpr double kElevatorDpP = 30.33 / 22589.66;  // Compbot
// 28 in: -21036; 32 in: -24517; -31 in :22216

// Elevator PID
// constexpr double kElevatorP = 0.09;   // Protobot
// constexpr double kElevatorI = 0.004;  // Protobot
// constexpr double kElevatorD = 0.0;    // Protobot
constexpr double kElevatorP = 0.27;   // Compbot
constexpr double kElevatorI = 0.001;  // Compbot
constexpr double kElevatorD = 0.0;    // Compbot
constexpr double kElevatorControllerPeriod = 0.02;
constexpr double kGravityFeedForward = -0.01;

// Elevator Setpoints
constexpr double kFloorHeight = 73.0;  // Makes sure it hits bottom
constexpr double kSecondBlockHeight = -10.0;
constexpr double kSwitchHeight = -36.0;
constexpr double kScaleHeight = -67.0;
constexpr double kClimbHeight = -70.0;  // 74.0

/*
 * Climber
 */

// Climber Solenoid ports
constexpr int kPawlPort = 3;
constexpr int kSetupForwardPort = 4;
constexpr int kSetupReversePort = 5;

/*
 * Miscellaneous
 */

// Game Data Constants
constexpr int kFriendlySwitch = 0;
constexpr int kScale = 1;
constexpr int kEnemySwitch = 2;

// Event Queue Size
constexpr int kEventQueueSize = 8;

// DS port
constexpr int kDsPort = 5800;

// LiveGrapher host port
constexpr int kLiveGrapherPort = 3513;

// MJPEG server port
constexpr int kMjpegServerPort = 1180;

// Offset generated by the exchange forcing our robot not to be in the center

constexpr int kExchangeOffset = 6.0;  // Estimate
